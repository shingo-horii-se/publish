<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.6" xml:lang="en-US">
  <compounddef id="layer__cake_8h" kind="file" language="C++">
    <compoundname>layer_cake.h</compoundname>
    <includes local="no">memory</includes>
    <includes local="no">typeindex</includes>
    <includes local="no">unordered_map</includes>
    <includes refid="types_8h" local="yes">nvblox/core/types.h</includes>
    <includes refid="layer_8h" local="yes">nvblox/map/layer.h</includes>
    <includes local="yes">nvblox/map/internal/impl/layer_cake_impl.h</includes>
    <includedby refid="layer__cake__io_8h" local="yes">layer_cake_io.h</includedby>
    <includedby refid="mapper_8h" local="yes">mapper.h</includedby>
    <includedby refid="nvblox_8h" local="yes">nvblox.h</includedby>
    <includedby refid="serializer_8h" local="yes">serializer.h</includedby>
    <incdepgraph>
      <node id="31">
        <label>nvblox/core/color.h</label>
        <link refid="color_8h"/>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
        <childnode refid="33" relation="include">
        </childnode>
      </node>
      <node id="12">
        <label>nvblox/core/hash.h</label>
        <link refid="hash_8h"/>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="24">
        <label>nvblox/core/iterator.h</label>
        <link refid="iterator_8h"/>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
      </node>
      <node id="5">
        <label>nvblox/core/types.h</label>
        <link refid="types_8h"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
      </node>
      <node id="17">
        <label>nvblox/core/unified_ptr.h</label>
        <link refid="unified__ptr_8h"/>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
      </node>
      <node id="23">
        <label>nvblox/core/unified_vector.h</label>
        <link refid="unified__vector_8h"/>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
      </node>
      <node id="28">
        <label>nvblox/gpu_hash/gpu_layer_view.h</label>
        <link refid="gpu__layer__view_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="29">
        <label>nvblox/map/blox.h</label>
        <link refid="blox_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
      </node>
      <node id="11">
        <label>nvblox/map/layer.h</label>
        <link refid="layer_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="35" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>layer_cake.h</label>
        <link refid="layer__cake_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="36" relation="include">
        </childnode>
      </node>
      <node id="30">
        <label>nvblox/map/voxels.h</label>
        <link refid="voxels_8h"/>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
      </node>
      <node id="20">
        <label>nvblox/utils/logging.h</label>
        <link refid="logging_8h"/>
        <childnode refid="21" relation="include">
        </childnode>
      </node>
      <node id="8">
        <label>Eigen/Core</label>
      </node>
      <node id="9">
        <label>Eigen/Geometry</label>
      </node>
      <node id="18">
        <label>atomic</label>
      </node>
      <node id="33">
        <label>cmath</label>
      </node>
      <node id="25">
        <label>cstddef</label>
      </node>
      <node id="7">
        <label>cuda_runtime.h</label>
      </node>
      <node id="13">
        <label>functional</label>
      </node>
      <node id="21">
        <label>glog/logging.h</label>
      </node>
      <node id="6">
        <label>iostream</label>
      </node>
      <node id="26">
        <label>iterator</label>
      </node>
      <node id="2">
        <label>memory</label>
      </node>
      <node id="22">
        <label>nvblox/core/internal/impl/unified_ptr_impl.h</label>
      </node>
      <node id="27">
        <label>nvblox/core/internal/impl/unified_vector_impl.h</label>
      </node>
      <node id="16">
        <label>nvblox/core/traits.h</label>
      </node>
      <node id="34">
        <label>nvblox/map/internal/impl/blox_impl.h</label>
      </node>
      <node id="36">
        <label>nvblox/map/internal/impl/layer_cake_impl.h</label>
      </node>
      <node id="35">
        <label>nvblox/map/internal/impl/layer_impl.h</label>
      </node>
      <node id="32">
        <label>stdint.h</label>
      </node>
      <node id="19">
        <label>type_traits</label>
      </node>
      <node id="3">
        <label>typeindex</label>
      </node>
      <node id="4">
        <label>unordered_map</label>
      </node>
      <node id="14">
        <label>unordered_set</label>
      </node>
      <node id="15">
        <label>utility</label>
      </node>
      <node id="10">
        <label>vector</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="2">
        <label>layer_cake_io.h</label>
        <link refid="layer__cake__io_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>layer_cake.h</label>
        <link refid="layer__cake_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>mapper.h</label>
        <link refid="mapper_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="5">
        <label>multi_mapper.h</label>
        <link refid="multi__mapper_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>nvblox.h</label>
        <link refid="nvblox_8h"/>
      </node>
      <node id="6">
        <label>serializer.h</label>
        <link refid="serializer_8h"/>
      </node>
    </invincdepgraph>
    <innerclass refid="classnvblox_1_1LayerCake" prot="public">nvblox::LayerCake</innerclass>
    <innernamespace refid="namespacenvblox">nvblox</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment">Copyright<sp/>2022<sp/>NVIDIA<sp/>CORPORATION</highlight></codeline>
<codeline lineno="3"><highlight class="comment"></highlight></codeline>
<codeline lineno="4"><highlight class="comment">Licensed<sp/>under<sp/>the<sp/>Apache<sp/>License,<sp/>Version<sp/>2.0<sp/>(the<sp/>&quot;License&quot;);</highlight></codeline>
<codeline lineno="5"><highlight class="comment">you<sp/>may<sp/>not<sp/>use<sp/>this<sp/>file<sp/>except<sp/>in<sp/>compliance<sp/>with<sp/>the<sp/>License.</highlight></codeline>
<codeline lineno="6"><highlight class="comment">You<sp/>may<sp/>obtain<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>License<sp/>at</highlight></codeline>
<codeline lineno="7"><highlight class="comment"></highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/><sp/><sp/><sp/>http://www.apache.org/licenses/LICENSE-2.0</highlight></codeline>
<codeline lineno="9"><highlight class="comment"></highlight></codeline>
<codeline lineno="10"><highlight class="comment">Unless<sp/>required<sp/>by<sp/>applicable<sp/>law<sp/>or<sp/>agreed<sp/>to<sp/>in<sp/>writing,<sp/>software</highlight></codeline>
<codeline lineno="11"><highlight class="comment">distributed<sp/>under<sp/>the<sp/>License<sp/>is<sp/>distributed<sp/>on<sp/>an<sp/>&quot;AS<sp/>IS&quot;<sp/>BASIS,</highlight></codeline>
<codeline lineno="12"><highlight class="comment">WITHOUT<sp/>WARRANTIES<sp/>OR<sp/>CONDITIONS<sp/>OF<sp/>ANY<sp/>KIND,<sp/>either<sp/>express<sp/>or<sp/>implied.</highlight></codeline>
<codeline lineno="13"><highlight class="comment">See<sp/>the<sp/>License<sp/>for<sp/>the<sp/>specific<sp/>language<sp/>governing<sp/>permissions<sp/>and</highlight></codeline>
<codeline lineno="14"><highlight class="comment">limitations<sp/>under<sp/>the<sp/>License.</highlight></codeline>
<codeline lineno="15"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>once</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;memory&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;typeindex&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;unordered_map&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="types_8h" kindref="compound">nvblox/core/types.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="layer_8h" kindref="compound">nvblox/map/layer.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespacenvblox" kindref="compound">nvblox</ref><sp/>{</highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight></codeline>
<codeline lineno="30" refid="classnvblox_1_1LayerCake" refkind="compound"><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classnvblox_1_1LayerCake" kindref="compound">LayerCake</ref><sp/>{</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="32" refid="classnvblox_1_1LayerCake_1afc1063656b4484c9249cdf4da40d726d" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classnvblox_1_1LayerCake_1afc1063656b4484c9249cdf4da40d726d" kindref="member">LayerCake</ref>()<sp/>=<sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="33" refid="classnvblox_1_1LayerCake_1a66245d14e7e174de1dc5b4aab2c1204a" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classnvblox_1_1LayerCake_1a66245d14e7e174de1dc5b4aab2c1204a" kindref="member">LayerCake</ref>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="classnvblox_1_1LayerCake_1a6d68e3d4f37d3ce9844f20eee8a5bf42" kindref="member">voxel_size</ref>)<sp/>:<sp/>voxel_size_(<ref refid="classnvblox_1_1LayerCake_1a6d68e3d4f37d3ce9844f20eee8a5bf42" kindref="member">voxel_size</ref>)<sp/>{}</highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight></codeline>
<codeline lineno="36" refid="classnvblox_1_1LayerCake_1afaecbb4efd991cdb88099a3c21fb3302" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classnvblox_1_1LayerCake_1afaecbb4efd991cdb88099a3c21fb3302" kindref="member">LayerCake</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classnvblox_1_1LayerCake" kindref="compound">LayerCake</ref>&amp;<sp/>other)<sp/>=<sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="37" refid="classnvblox_1_1LayerCake_1aa833a801333fa8032568b83c02bab20c" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classnvblox_1_1LayerCake" kindref="compound">LayerCake</ref>&amp;<sp/><ref refid="classnvblox_1_1LayerCake_1aa833a801333fa8032568b83c02bab20c" kindref="member">operator=</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classnvblox_1_1LayerCake" kindref="compound">LayerCake</ref>&amp;<sp/>other)<sp/>=<sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight></codeline>
<codeline lineno="40" refid="classnvblox_1_1LayerCake_1ab619325dac6bd377a03d7cd522cdddf2" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classnvblox_1_1LayerCake_1ab619325dac6bd377a03d7cd522cdddf2" kindref="member">LayerCake</ref>(<ref refid="classnvblox_1_1LayerCake" kindref="compound">LayerCake</ref>&amp;&amp;<sp/>other)<sp/>=<sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="41" refid="classnvblox_1_1LayerCake_1ae0aaabad1525c891cecf9bfd333c7839" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classnvblox_1_1LayerCake" kindref="compound">LayerCake</ref>&amp;<sp/><ref refid="classnvblox_1_1LayerCake_1ae0aaabad1525c891cecf9bfd333c7839" kindref="member">operator=</ref>(<ref refid="classnvblox_1_1LayerCake" kindref="compound">LayerCake</ref>&amp;&amp;<sp/>other)<sp/>=<sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>LayerType&gt;</highlight></codeline>
<codeline lineno="44" refid="classnvblox_1_1LayerCake_1ac0654b4e385cac8f97ff93bbdde8fb24" refkind="member"><highlight class="normal"><sp/><sp/>LayerType*<sp/><ref refid="classnvblox_1_1LayerCake_1ac0654b4e385cac8f97ff93bbdde8fb24" kindref="member">add</ref>(<ref refid="namespacenvblox_1adb582c0d90a20d74dff447c0ac393223" kindref="member">MemoryType</ref><sp/>memory_type);</highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight></codeline>
<codeline lineno="47" refid="classnvblox_1_1LayerCake_1a00b7afb6234ee9ef68d314bdc82fd04d" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classnvblox_1_1LayerCake_1a00b7afb6234ee9ef68d314bdc82fd04d" kindref="member">insert</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::type_index&amp;<sp/>type_index,</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::unique_ptr&lt;BaseLayer&gt;&amp;&amp;<sp/>layer);</highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>LayerType&gt;</highlight></codeline>
<codeline lineno="52" refid="classnvblox_1_1LayerCake_1ad9b8151ca8a0d898b72b3dfacb61007b" refkind="member"><highlight class="normal"><sp/><sp/>LayerType*<sp/><ref refid="classnvblox_1_1LayerCake_1ad9b8151ca8a0d898b72b3dfacb61007b" kindref="member">getPtr</ref>();</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>LayerType&gt;</highlight></codeline>
<codeline lineno="54" refid="classnvblox_1_1LayerCake_1af9fa160b5ed9329ee57bd6c6a58a58ba" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>LayerType*<sp/><ref refid="classnvblox_1_1LayerCake_1af9fa160b5ed9329ee57bd6c6a58a58ba" kindref="member">getConstPtr</ref>()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>LayerType&gt;</highlight></codeline>
<codeline lineno="58" refid="classnvblox_1_1LayerCake_1a180835d3fe2a3816c2f9da6c37e9a335" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>LayerType&amp;<sp/><ref refid="classnvblox_1_1LayerCake_1a180835d3fe2a3816c2f9da6c37e9a335" kindref="member">get</ref>()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>LayerType&gt;</highlight></codeline>
<codeline lineno="61" refid="classnvblox_1_1LayerCake_1a127d429004923697dcb69b16d4078430" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classnvblox_1_1LayerCake_1a127d429004923697dcb69b16d4078430" kindref="member">exists</ref>()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight></codeline>
<codeline lineno="63" refid="classnvblox_1_1LayerCake_1ab613c48f308f64eaf26306070ee4ba40" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classnvblox_1_1LayerCake_1ab613c48f308f64eaf26306070ee4ba40" kindref="member">empty</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>layers_.empty();<sp/>}</highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight></codeline>
<codeline lineno="65" refid="classnvblox_1_1LayerCake_1af29993162b0d5a9720308161367a5b04" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classnvblox_1_1LayerCake_1af29993162b0d5a9720308161367a5b04" kindref="member">clear</ref>()<sp/>{<sp/>layers_.clear();<sp/>}</highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal">...<sp/>LayerTypes&gt;</highlight></codeline>
<codeline lineno="69" refid="classnvblox_1_1LayerCake_1a1fc52582159468b227e668e8bf6115e2" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="classnvblox_1_1LayerCake" kindref="compound">LayerCake</ref><sp/><ref refid="classnvblox_1_1LayerCake_1a1fc52582159468b227e668e8bf6115e2" kindref="member">create</ref>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="classnvblox_1_1LayerCake_1a6d68e3d4f37d3ce9844f20eee8a5bf42" kindref="member">voxel_size</ref>,<sp/><ref refid="namespacenvblox_1adb582c0d90a20d74dff447c0ac393223" kindref="member">MemoryType</ref><sp/>memory_type);</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal">...<sp/>LayerTypes,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal">...<sp/>MemoryTypes&gt;</highlight></codeline>
<codeline lineno="71" refid="classnvblox_1_1LayerCake_1af813a6e7bcae450d813bad93b1b4ea98" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="classnvblox_1_1LayerCake" kindref="compound">LayerCake</ref><sp/><ref refid="classnvblox_1_1LayerCake_1af813a6e7bcae450d813bad93b1b4ea98" kindref="member">create</ref>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="classnvblox_1_1LayerCake_1a6d68e3d4f37d3ce9844f20eee8a5bf42" kindref="member">voxel_size</ref>,<sp/>MemoryTypes...<sp/>memory_type);</highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::unordered_map&lt;std::type_index,<sp/>std::unique_ptr&lt;BaseLayer&gt;&gt;&amp;</highlight></codeline>
<codeline lineno="74" refid="classnvblox_1_1LayerCake_1a4d73aa966b2eac2d7aeca6f601d9489e" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classnvblox_1_1LayerCake_1a4d73aa966b2eac2d7aeca6f601d9489e" kindref="member">get_layers</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>layers_;</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight></codeline>
<codeline lineno="78" refid="classnvblox_1_1LayerCake_1a6d68e3d4f37d3ce9844f20eee8a5bf42" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="classnvblox_1_1LayerCake_1a6d68e3d4f37d3ce9844f20eee8a5bf42" kindref="member">voxel_size</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>voxel_size_;<sp/>}</highlight></codeline>
<codeline lineno="79" refid="classnvblox_1_1LayerCake_1a1654473d845cebb8aac99fbd4c3318be" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="classnvblox_1_1LayerCake_1a1654473d845cebb8aac99fbd4c3318be" kindref="member">block_size</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>voxel_size_<sp/>*<sp/><ref refid="structnvblox_1_1VoxelBlock" kindref="compound">VoxelBlock&lt;bool&gt;::kVoxelsPerSide</ref>;</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Params</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>voxel_size_<sp/>=<sp/>0.0f;</highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/>std::unordered_map&lt;std::type_index,<sp/>std::unique_ptr&lt;BaseLayer&gt;&gt;<sp/>layers_;</highlight></codeline>
<codeline lineno="91"><highlight class="normal">};</highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal">}<sp/><sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>nvblox</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;nvblox/map/internal/impl/layer_cake_impl.h&quot;</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="C:/Users/M502228/Downloads/nvblox-public/nvblox-public/nvblox/include/nvblox/map/layer_cake.h"/>
  </compounddef>
</doxygen>
