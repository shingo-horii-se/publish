<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.6" xml:lang="en-US">
  <compounddef id="structnvblox_1_1MeshBlock" kind="struct" language="C++" prot="public">
    <compoundname>nvblox::MeshBlock</compoundname>
    <includes refid="mesh__block_8h" local="no">mesh_block.h</includes>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="structnvblox_1_1MeshBlock_1a9b2407ee1443344552a7c731ff2949d8" prot="public" static="no">
        <type>std::shared_ptr&lt; <ref refid="structnvblox_1_1MeshBlock" kindref="compound">MeshBlock</ref> &gt;</type>
        <definition>typedef std::shared_ptr&lt;MeshBlock&gt; nvblox::MeshBlock::Ptr</definition>
        <argsstring></argsstring>
        <name>Ptr</name>
        <qualifiedname>nvblox::MeshBlock::Ptr</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/M502228/Downloads/nvblox-public/nvblox-public/nvblox/include/nvblox/mesh/mesh_block.h" line="33" column="27" bodyfile="C:/Users/M502228/Downloads/nvblox-public/nvblox-public/nvblox/include/nvblox/mesh/mesh_block.h" bodystart="33" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="structnvblox_1_1MeshBlock_1aa815f2904b574720bf9e5de25afe3dae" prot="public" static="no">
        <type>std::shared_ptr&lt; const <ref refid="structnvblox_1_1MeshBlock" kindref="compound">MeshBlock</ref> &gt;</type>
        <definition>typedef std::shared_ptr&lt;const MeshBlock&gt; nvblox::MeshBlock::ConstPtr</definition>
        <argsstring></argsstring>
        <name>ConstPtr</name>
        <qualifiedname>nvblox::MeshBlock::ConstPtr</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/M502228/Downloads/nvblox-public/nvblox-public/nvblox/include/nvblox/mesh/mesh_block.h" line="34" column="27" bodyfile="C:/Users/M502228/Downloads/nvblox-public/nvblox-public/nvblox/include/nvblox/mesh/mesh_block.h" bodystart="34" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="structnvblox_1_1MeshBlock_1a5cf5d330b3e60e120b9d0120e9adb27a" prot="public" static="no" mutable="no">
        <type><ref refid="classnvblox_1_1unified__vector" kindref="compound">unified_vector</ref>&lt; <ref refid="namespacenvblox_1a4b87a147b3363eaf7442ed521d3a9968" kindref="member">Vector3f</ref> &gt;</type>
        <definition>unified_vector&lt;Vector3f&gt; nvblox::MeshBlock::vertices</definition>
        <argsstring></argsstring>
        <name>vertices</name>
        <qualifiedname>nvblox::MeshBlock::vertices</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/M502228/Downloads/nvblox-public/nvblox-public/nvblox/include/nvblox/mesh/mesh_block.h" line="49" column="18" bodyfile="C:/Users/M502228/Downloads/nvblox-public/nvblox-public/nvblox/include/nvblox/mesh/mesh_block.h" bodystart="49" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structnvblox_1_1MeshBlock_1a22e8e8bb480a7e052e01067b1ac044aa" prot="public" static="no" mutable="no">
        <type><ref refid="classnvblox_1_1unified__vector" kindref="compound">unified_vector</ref>&lt; <ref refid="namespacenvblox_1a4b87a147b3363eaf7442ed521d3a9968" kindref="member">Vector3f</ref> &gt;</type>
        <definition>unified_vector&lt;Vector3f&gt; nvblox::MeshBlock::normals</definition>
        <argsstring></argsstring>
        <name>normals</name>
        <qualifiedname>nvblox::MeshBlock::normals</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/M502228/Downloads/nvblox-public/nvblox-public/nvblox/include/nvblox/mesh/mesh_block.h" line="50" column="18" bodyfile="C:/Users/M502228/Downloads/nvblox-public/nvblox-public/nvblox/include/nvblox/mesh/mesh_block.h" bodystart="50" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structnvblox_1_1MeshBlock_1a6ea4d04d80bcf1604fb3e37297e44b4e" prot="public" static="no" mutable="no">
        <type><ref refid="classnvblox_1_1unified__vector" kindref="compound">unified_vector</ref>&lt; <ref refid="structnvblox_1_1Color" kindref="compound">Color</ref> &gt;</type>
        <definition>unified_vector&lt;Color&gt; nvblox::MeshBlock::colors</definition>
        <argsstring></argsstring>
        <name>colors</name>
        <qualifiedname>nvblox::MeshBlock::colors</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/M502228/Downloads/nvblox-public/nvblox-public/nvblox/include/nvblox/mesh/mesh_block.h" line="51" column="18" bodyfile="C:/Users/M502228/Downloads/nvblox-public/nvblox-public/nvblox/include/nvblox/mesh/mesh_block.h" bodystart="51" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structnvblox_1_1MeshBlock_1a607e7edfa7ed03bc019d4984518ddfa1" prot="public" static="no" mutable="no">
        <type><ref refid="classnvblox_1_1unified__vector" kindref="compound">unified_vector</ref>&lt; int &gt;</type>
        <definition>unified_vector&lt;int&gt; nvblox::MeshBlock::triangles</definition>
        <argsstring></argsstring>
        <name>triangles</name>
        <qualifiedname>nvblox::MeshBlock::triangles</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/M502228/Downloads/nvblox-public/nvblox-public/nvblox/include/nvblox/mesh/mesh_block.h" line="52" column="18" bodyfile="C:/Users/M502228/Downloads/nvblox-public/nvblox-public/nvblox/include/nvblox/mesh/mesh_block.h" bodystart="52" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="structnvblox_1_1MeshBlock_1a407f351355b9608c071ea4c41e9974a4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>nvblox::MeshBlock::MeshBlock</definition>
        <argsstring>(MemoryType memory_type=MemoryType::kDevice)</argsstring>
        <name>MeshBlock</name>
        <qualifiedname>nvblox::MeshBlock::MeshBlock</qualifiedname>
        <param>
          <type><ref refid="namespacenvblox_1adb582c0d90a20d74dff447c0ac393223" kindref="member">MemoryType</ref></type>
          <declname>memory_type</declname>
          <defval><ref refid="namespacenvblox_1adb582c0d90a20d74dff447c0ac393223a040394711ad65e20323fe0114e507103" kindref="member">MemoryType::kDevice</ref></defval>
        </param>
        <briefdescription>
<para>Create a mesh block of the specified memory type. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/M502228/Downloads/nvblox-public/nvblox-public/nvblox/include/nvblox/mesh/mesh_block.h" line="37" column="3"/>
      </memberdef>
      <memberdef kind="function" id="structnvblox_1_1MeshBlock_1a77670c67d8e00672346fb41995a624c4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>nvblox::MeshBlock::MeshBlock</definition>
        <argsstring>(const MeshBlock &amp;mesh_block)</argsstring>
        <name>MeshBlock</name>
        <qualifiedname>nvblox::MeshBlock::MeshBlock</qualifiedname>
        <param>
          <type>const <ref refid="structnvblox_1_1MeshBlock" kindref="compound">MeshBlock</ref> &amp;</type>
          <declname>mesh_block</declname>
        </param>
        <briefdescription>
<para>&quot;Clone&quot; copy constructor, with the possibility to change device type. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/M502228/Downloads/nvblox-public/nvblox-public/nvblox/include/nvblox/mesh/mesh_block.h" line="40" column="3"/>
      </memberdef>
      <memberdef kind="function" id="structnvblox_1_1MeshBlock_1aa5ea642759af01c9e057e1963e355bbe" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>nvblox::MeshBlock::MeshBlock</definition>
        <argsstring>(const MeshBlock &amp;mesh_block, MemoryType memory_type)</argsstring>
        <name>MeshBlock</name>
        <qualifiedname>nvblox::MeshBlock::MeshBlock</qualifiedname>
        <param>
          <type>const <ref refid="structnvblox_1_1MeshBlock" kindref="compound">MeshBlock</ref> &amp;</type>
          <declname>mesh_block</declname>
        </param>
        <param>
          <type><ref refid="namespacenvblox_1adb582c0d90a20d74dff447c0ac393223" kindref="member">MemoryType</ref></type>
          <declname>memory_type</declname>
        </param>
        <briefdescription>
<para>&quot;Clone&quot; to a different memory type. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/M502228/Downloads/nvblox-public/nvblox-public/nvblox/include/nvblox/mesh/mesh_block.h" line="42" column="3"/>
      </memberdef>
      <memberdef kind="function" id="structnvblox_1_1MeshBlock_1aca15e26479441d8d557583bfc07deffb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void nvblox::MeshBlock::clear</definition>
        <argsstring>()</argsstring>
        <name>clear</name>
        <qualifiedname>nvblox::MeshBlock::clear</qualifiedname>
        <briefdescription>
<para>Clear all data within the mesh block. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/M502228/Downloads/nvblox-public/nvblox-public/nvblox/include/nvblox/mesh/mesh_block.h" line="55" column="8"/>
      </memberdef>
      <memberdef kind="function" id="structnvblox_1_1MeshBlock_1ab7a125876a39acaa3c0d54866d726b4b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void nvblox::MeshBlock::resizeToNumberOfVertices</definition>
        <argsstring>(size_t new_size)</argsstring>
        <name>resizeToNumberOfVertices</name>
        <qualifiedname>nvblox::MeshBlock::resizeToNumberOfVertices</qualifiedname>
        <param>
          <type>size_t</type>
          <declname>new_size</declname>
        </param>
        <briefdescription>
<para>Resize vertices and normals to the correct number of vertices. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/M502228/Downloads/nvblox-public/nvblox-public/nvblox/include/nvblox/mesh/mesh_block.h" line="58" column="8"/>
      </memberdef>
      <memberdef kind="function" id="structnvblox_1_1MeshBlock_1a7d1e86eb71a8846a34b296b99c7bcda9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void nvblox::MeshBlock::reserveNumberOfVertices</definition>
        <argsstring>(size_t new_capacity)</argsstring>
        <name>reserveNumberOfVertices</name>
        <qualifiedname>nvblox::MeshBlock::reserveNumberOfVertices</qualifiedname>
        <param>
          <type>size_t</type>
          <declname>new_capacity</declname>
        </param>
        <briefdescription>
<para>Reserve space in the vertices and normals vectors. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/M502228/Downloads/nvblox-public/nvblox-public/nvblox/include/nvblox/mesh/mesh_block.h" line="60" column="8"/>
      </memberdef>
      <memberdef kind="function" id="structnvblox_1_1MeshBlock_1a1ae6f7614a6c98ece277453f7a5b5bd4" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>size_t</type>
        <definition>size_t nvblox::MeshBlock::size</definition>
        <argsstring>() const</argsstring>
        <name>size</name>
        <qualifiedname>nvblox::MeshBlock::size</qualifiedname>
        <briefdescription>
<para>Size of the vertices vector. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/M502228/Downloads/nvblox-public/nvblox-public/nvblox/include/nvblox/mesh/mesh_block.h" line="63" column="10"/>
      </memberdef>
      <memberdef kind="function" id="structnvblox_1_1MeshBlock_1af74075e3fd517d8de7b83f58109f3860" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>size_t</type>
        <definition>size_t nvblox::MeshBlock::capacity</definition>
        <argsstring>() const</argsstring>
        <name>capacity</name>
        <qualifiedname>nvblox::MeshBlock::capacity</qualifiedname>
        <briefdescription>
<para>Capacity (allocated size) of the vertices vector. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/M502228/Downloads/nvblox-public/nvblox-public/nvblox/include/nvblox/mesh/mesh_block.h" line="65" column="10"/>
      </memberdef>
      <memberdef kind="function" id="structnvblox_1_1MeshBlock_1a456407e63aa513747c9459845c3df459" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void nvblox::MeshBlock::expandColorsToMatchVertices</definition>
        <argsstring>()</argsstring>
        <name>expandColorsToMatchVertices</name>
        <qualifiedname>nvblox::MeshBlock::expandColorsToMatchVertices</qualifiedname>
        <briefdescription>
<para>Resize colors/intensities such that: <computeroutput>colors.size()/intensities.<ref refid="structnvblox_1_1MeshBlock_1a1ae6f7614a6c98ece277453f7a5b5bd4" kindref="member">size()</ref> == vertices.size()</computeroutput> </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/M502228/Downloads/nvblox-public/nvblox-public/nvblox/include/nvblox/mesh/mesh_block.h" line="69" column="8"/>
      </memberdef>
      <memberdef kind="function" id="structnvblox_1_1MeshBlock_1aed06010cb924dbdd5ab926ab9bc0498f" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>std::vector&lt; <ref refid="namespacenvblox_1a4b87a147b3363eaf7442ed521d3a9968" kindref="member">Vector3f</ref> &gt;</type>
        <definition>std::vector&lt; Vector3f &gt; nvblox::MeshBlock::getVertexVectorOnCPU</definition>
        <argsstring>() const</argsstring>
        <name>getVertexVectorOnCPU</name>
        <qualifiedname>nvblox::MeshBlock::getVertexVectorOnCPU</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/M502228/Downloads/nvblox-public/nvblox-public/nvblox/include/nvblox/mesh/mesh_block.h" line="72" column="15"/>
      </memberdef>
      <memberdef kind="function" id="structnvblox_1_1MeshBlock_1a46d090dff3ec7f105593979226d9d661" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>std::vector&lt; <ref refid="namespacenvblox_1a4b87a147b3363eaf7442ed521d3a9968" kindref="member">Vector3f</ref> &gt;</type>
        <definition>std::vector&lt; Vector3f &gt; nvblox::MeshBlock::getNormalVectorOnCPU</definition>
        <argsstring>() const</argsstring>
        <name>getNormalVectorOnCPU</name>
        <qualifiedname>nvblox::MeshBlock::getNormalVectorOnCPU</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/M502228/Downloads/nvblox-public/nvblox-public/nvblox/include/nvblox/mesh/mesh_block.h" line="73" column="15"/>
      </memberdef>
      <memberdef kind="function" id="structnvblox_1_1MeshBlock_1ab06236aed027df9c02ac95d4111b372d" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>std::vector&lt; int &gt;</type>
        <definition>std::vector&lt; int &gt; nvblox::MeshBlock::getTriangleVectorOnCPU</definition>
        <argsstring>() const</argsstring>
        <name>getTriangleVectorOnCPU</name>
        <qualifiedname>nvblox::MeshBlock::getTriangleVectorOnCPU</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/M502228/Downloads/nvblox-public/nvblox-public/nvblox/include/nvblox/mesh/mesh_block.h" line="74" column="15"/>
      </memberdef>
      <memberdef kind="function" id="structnvblox_1_1MeshBlock_1a9838a46b32be522694844e109964a44c" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>std::vector&lt; <ref refid="structnvblox_1_1Color" kindref="compound">Color</ref> &gt;</type>
        <definition>std::vector&lt; Color &gt; nvblox::MeshBlock::getColorVectorOnCPU</definition>
        <argsstring>() const</argsstring>
        <name>getColorVectorOnCPU</name>
        <qualifiedname>nvblox::MeshBlock::getColorVectorOnCPU</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/M502228/Downloads/nvblox-public/nvblox-public/nvblox/include/nvblox/mesh/mesh_block.h" line="75" column="15"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="structnvblox_1_1MeshBlock_1a6aacda192dd7aac62a336c9905f9b3d0" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structnvblox_1_1MeshBlock_1a9b2407ee1443344552a7c731ff2949d8" kindref="member">Ptr</ref></type>
        <definition>static Ptr nvblox::MeshBlock::allocate</definition>
        <argsstring>(MemoryType memory_type)</argsstring>
        <name>allocate</name>
        <qualifiedname>nvblox::MeshBlock::allocate</qualifiedname>
        <param>
          <type><ref refid="namespacenvblox_1adb582c0d90a20d74dff447c0ac393223" kindref="member">MemoryType</ref></type>
          <declname>memory_type</declname>
        </param>
        <briefdescription>
<para>Note(alexmillane): Memory type ignored, MeshBlocks live in CPU memory. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/M502228/Downloads/nvblox-public/nvblox-public/nvblox/include/nvblox/mesh/mesh_block.h" line="78" column="14"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>A mesh block containing all of the triangles from this block. </para>
    </briefdescription>
    <detaileddescription>
<para>Each block contains only the UPPER part of its neighbors: i.e., the max x, y, and z axes. Its neighbors are responsible for the rest. </para>
    </detaileddescription>
    <collaborationgraph>
      <node id="1">
        <label>nvblox::MeshBlock</label>
        <link refid="structnvblox_1_1MeshBlock"/>
        <childnode refid="2" relation="usage">
          <edgelabel>normals</edgelabel>
          <edgelabel>vertices</edgelabel>
        </childnode>
        <childnode refid="3" relation="usage">
          <edgelabel>colors</edgelabel>
        </childnode>
        <childnode refid="4" relation="usage">
          <edgelabel>triangles</edgelabel>
        </childnode>
      </node>
      <node id="2">
        <label>nvblox::unified_vector&lt; Vector3f &gt;</label>
        <link refid="classnvblox_1_1unified__vector"/>
      </node>
      <node id="4">
        <label>nvblox::unified_vector&lt; int &gt;</label>
        <link refid="classnvblox_1_1unified__vector"/>
      </node>
      <node id="3">
        <label>nvblox::unified_vector&lt; nvblox::Color &gt;</label>
        <link refid="classnvblox_1_1unified__vector"/>
      </node>
    </collaborationgraph>
    <location file="C:/Users/M502228/Downloads/nvblox-public/nvblox-public/nvblox/include/nvblox/mesh/mesh_block.h" line="32" column="1" bodyfile="C:/Users/M502228/Downloads/nvblox-public/nvblox-public/nvblox/include/nvblox/mesh/mesh_block.h" bodystart="32" bodyend="79"/>
    <listofallmembers>
      <member refid="structnvblox_1_1MeshBlock_1a6aacda192dd7aac62a336c9905f9b3d0" prot="public" virt="non-virtual"><scope>nvblox::MeshBlock</scope><name>allocate</name></member>
      <member refid="structnvblox_1_1MeshBlock_1af74075e3fd517d8de7b83f58109f3860" prot="public" virt="non-virtual"><scope>nvblox::MeshBlock</scope><name>capacity</name></member>
      <member refid="structnvblox_1_1MeshBlock_1aca15e26479441d8d557583bfc07deffb" prot="public" virt="non-virtual"><scope>nvblox::MeshBlock</scope><name>clear</name></member>
      <member refid="structnvblox_1_1MeshBlock_1a6ea4d04d80bcf1604fb3e37297e44b4e" prot="public" virt="non-virtual"><scope>nvblox::MeshBlock</scope><name>colors</name></member>
      <member refid="structnvblox_1_1MeshBlock_1aa815f2904b574720bf9e5de25afe3dae" prot="public" virt="non-virtual"><scope>nvblox::MeshBlock</scope><name>ConstPtr</name></member>
      <member refid="structnvblox_1_1MeshBlock_1a456407e63aa513747c9459845c3df459" prot="public" virt="non-virtual"><scope>nvblox::MeshBlock</scope><name>expandColorsToMatchVertices</name></member>
      <member refid="structnvblox_1_1MeshBlock_1a9838a46b32be522694844e109964a44c" prot="public" virt="non-virtual"><scope>nvblox::MeshBlock</scope><name>getColorVectorOnCPU</name></member>
      <member refid="structnvblox_1_1MeshBlock_1a46d090dff3ec7f105593979226d9d661" prot="public" virt="non-virtual"><scope>nvblox::MeshBlock</scope><name>getNormalVectorOnCPU</name></member>
      <member refid="structnvblox_1_1MeshBlock_1ab06236aed027df9c02ac95d4111b372d" prot="public" virt="non-virtual"><scope>nvblox::MeshBlock</scope><name>getTriangleVectorOnCPU</name></member>
      <member refid="structnvblox_1_1MeshBlock_1aed06010cb924dbdd5ab926ab9bc0498f" prot="public" virt="non-virtual"><scope>nvblox::MeshBlock</scope><name>getVertexVectorOnCPU</name></member>
      <member refid="structnvblox_1_1MeshBlock_1a407f351355b9608c071ea4c41e9974a4" prot="public" virt="non-virtual"><scope>nvblox::MeshBlock</scope><name>MeshBlock</name></member>
      <member refid="structnvblox_1_1MeshBlock_1a77670c67d8e00672346fb41995a624c4" prot="public" virt="non-virtual"><scope>nvblox::MeshBlock</scope><name>MeshBlock</name></member>
      <member refid="structnvblox_1_1MeshBlock_1aa5ea642759af01c9e057e1963e355bbe" prot="public" virt="non-virtual"><scope>nvblox::MeshBlock</scope><name>MeshBlock</name></member>
      <member refid="structnvblox_1_1MeshBlock_1a22e8e8bb480a7e052e01067b1ac044aa" prot="public" virt="non-virtual"><scope>nvblox::MeshBlock</scope><name>normals</name></member>
      <member refid="structnvblox_1_1MeshBlock_1a9b2407ee1443344552a7c731ff2949d8" prot="public" virt="non-virtual"><scope>nvblox::MeshBlock</scope><name>Ptr</name></member>
      <member refid="structnvblox_1_1MeshBlock_1a7d1e86eb71a8846a34b296b99c7bcda9" prot="public" virt="non-virtual"><scope>nvblox::MeshBlock</scope><name>reserveNumberOfVertices</name></member>
      <member refid="structnvblox_1_1MeshBlock_1ab7a125876a39acaa3c0d54866d726b4b" prot="public" virt="non-virtual"><scope>nvblox::MeshBlock</scope><name>resizeToNumberOfVertices</name></member>
      <member refid="structnvblox_1_1MeshBlock_1a1ae6f7614a6c98ece277453f7a5b5bd4" prot="public" virt="non-virtual"><scope>nvblox::MeshBlock</scope><name>size</name></member>
      <member refid="structnvblox_1_1MeshBlock_1a607e7edfa7ed03bc019d4984518ddfa1" prot="public" virt="non-virtual"><scope>nvblox::MeshBlock</scope><name>triangles</name></member>
      <member refid="structnvblox_1_1MeshBlock_1a5cf5d330b3e60e120b9d0120e9adb27a" prot="public" virt="non-virtual"><scope>nvblox::MeshBlock</scope><name>vertices</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
