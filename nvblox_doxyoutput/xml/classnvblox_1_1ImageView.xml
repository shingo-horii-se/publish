<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.6" xml:lang="en-US">
  <compounddef id="classnvblox_1_1ImageView" kind="class" language="C++" prot="public">
    <compoundname>nvblox::ImageView</compoundname>
    <basecompoundref refid="classnvblox_1_1ImageBase" prot="public" virt="non-virtual">nvblox::ImageBase&lt; _ElementType &gt;</basecompoundref>
    <includes refid="image_8h" local="no">image.h</includes>
    <templateparamlist>
      <param>
        <type>typename _ElementType</type>
      </param>
    </templateparamlist>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="classnvblox_1_1ImageView_1ab9eb34a9a1ab3cc70bf5414df4616fae" prot="public" static="no">
        <type>_ElementType</type>
        <definition>typedef _ElementType nvblox::ImageView&lt; _ElementType &gt;::ElementType</definition>
        <argsstring></argsstring>
        <name>ElementType</name>
        <qualifiedname>nvblox::ImageView::ElementType</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/M502228/Downloads/nvblox-public/nvblox-public/nvblox/include/nvblox/sensors/image.h" line="173" column="24" bodyfile="C:/Users/M502228/Downloads/nvblox-public/nvblox-public/nvblox/include/nvblox/sensors/image.h" bodystart="173" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classnvblox_1_1ImageView_1a9121c4ef2b888cf3b81b3fa79309268b" prot="public" static="no">
        <type>std::remove_cv&lt; _ElementType &gt;::type</type>
        <definition>typedef std::remove_cv&lt;_ElementType&gt;::type nvblox::ImageView&lt; _ElementType &gt;::ElementType_nonconst</definition>
        <argsstring></argsstring>
        <name>ElementType_nonconst</name>
        <qualifiedname>nvblox::ImageView::ElementType_nonconst</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/M502228/Downloads/nvblox-public/nvblox-public/nvblox/include/nvblox/sensors/image.h" line="174" column="42" bodyfile="C:/Users/M502228/Downloads/nvblox-public/nvblox-public/nvblox/include/nvblox/sensors/image.h" bodystart="174" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classnvblox_1_1ImageView_1af01528f0241757eb0ab10c29a5255c5c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>nvblox::ImageView&lt; _ElementType &gt;::ImageView</definition>
        <argsstring>(int rows, int cols, ElementType *data=nullptr)</argsstring>
        <name>ImageView</name>
        <qualifiedname>nvblox::ImageView::ImageView</qualifiedname>
        <param>
          <type>int</type>
          <declname>rows</declname>
        </param>
        <param>
          <type>int</type>
          <declname>cols</declname>
        </param>
        <param>
          <type><ref refid="classnvblox_1_1ImageView_1ab9eb34a9a1ab3cc70bf5414df4616fae" kindref="member">ElementType</ref> *</type>
          <declname>data</declname>
          <defval>nullptr</defval>
        </param>
        <briefdescription>
<para>Wraps an existing buffer Does not control memory lifetime. </para>
        </briefdescription>
        <detaileddescription>
<para>It is the users responsibility to ensure that the underlying memory exists throughout use. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>rows</parametername>
</parameternamelist>
<parameterdescription>
<para>rows in image buffer </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>cols</parametername>
</parameternamelist>
<parameterdescription>
<para>cols in image buffer </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>data</parametername>
</parameternamelist>
<parameterdescription>
<para>memory buffer </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/M502228/Downloads/nvblox-public/nvblox-public/nvblox/include/nvblox/sensors/image.h" line="182" column="3"/>
      </memberdef>
      <memberdef kind="function" id="classnvblox_1_1ImageView_1adb3b40c8f8215dd78d176e2e2aac7128" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>nvblox::ImageView&lt; _ElementType &gt;::ImageView</definition>
        <argsstring>(Image&lt; ElementType &gt; &amp;image)</argsstring>
        <name>ImageView</name>
        <qualifiedname>nvblox::ImageView::ImageView</qualifiedname>
        <param>
          <type><ref refid="classnvblox_1_1Image" kindref="compound">Image</ref>&lt; <ref refid="classnvblox_1_1ImageView_1ab9eb34a9a1ab3cc70bf5414df4616fae" kindref="member">ElementType</ref> &gt; &amp;</type>
          <declname>image</declname>
        </param>
        <briefdescription>
<para>Construct from an (memory-owning) <ref refid="classnvblox_1_1Image" kindref="compound">Image</ref> Note that it is the users responsiblity to ensure the underlying image outlives the constructed view. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>image</parametername>
</parameternamelist>
<parameterdescription>
<para>The (memory-owning) <ref refid="classnvblox_1_1Image" kindref="compound">Image</ref> </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/M502228/Downloads/nvblox-public/nvblox-public/nvblox/include/nvblox/sensors/image.h" line="188" column="3"/>
      </memberdef>
      <memberdef kind="function" id="classnvblox_1_1ImageView_1a4f6b8451c8d4ff9bf8a59a51384f1c7f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>nvblox::ImageView&lt; _ElementType &gt;::ImageView</definition>
        <argsstring>(const Image&lt; ElementType_nonconst &gt; &amp;image)</argsstring>
        <name>ImageView</name>
        <qualifiedname>nvblox::ImageView::ImageView</qualifiedname>
        <param>
          <type>const <ref refid="classnvblox_1_1Image" kindref="compound">Image</ref>&lt; <ref refid="classnvblox_1_1ImageView_1a9121c4ef2b888cf3b81b3fa79309268b" kindref="member">ElementType_nonconst</ref> &gt; &amp;</type>
          <declname>image</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/M502228/Downloads/nvblox-public/nvblox-public/nvblox/include/nvblox/sensors/image.h" line="189" column="3"/>
      </memberdef>
      <memberdef kind="function" id="classnvblox_1_1ImageView_1aaa967b7ae68f8c59af61f0b3e78f860e" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type></type>
        <definition>virtual nvblox::ImageView&lt; _ElementType &gt;::~ImageView</definition>
        <argsstring>()=default</argsstring>
        <name>~ImageView</name>
        <qualifiedname>nvblox::ImageView::~ImageView</qualifiedname>
        <briefdescription>
<para>Destructor. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/M502228/Downloads/nvblox-public/nvblox-public/nvblox/include/nvblox/sensors/image.h" line="192" column="11"/>
      </memberdef>
      <memberdef kind="function" id="classnvblox_1_1ImageView_1a75465ebcae2a12da93940a1eee1dd3be" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>nvblox::ImageView&lt; _ElementType &gt;::ImageView</definition>
        <argsstring>(const ImageView &amp;other)</argsstring>
        <name>ImageView</name>
        <qualifiedname>nvblox::ImageView::ImageView</qualifiedname>
        <param>
          <type>const <ref refid="classnvblox_1_1ImageView" kindref="compound">ImageView</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
<para>(Shallow) Copy </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/M502228/Downloads/nvblox-public/nvblox-public/nvblox/include/nvblox/sensors/image.h" line="195" column="3"/>
      </memberdef>
      <memberdef kind="function" id="classnvblox_1_1ImageView_1a5b57fdf573157dde0dcb5db40796310d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classnvblox_1_1ImageView" kindref="compound">ImageView</ref> &amp;</type>
        <definition>ImageView &amp; nvblox::ImageView&lt; _ElementType &gt;::operator=</definition>
        <argsstring>(const ImageView &amp;other)</argsstring>
        <name>operator=</name>
        <qualifiedname>nvblox::ImageView::operator=</qualifiedname>
        <param>
          <type>const <ref refid="classnvblox_1_1ImageView" kindref="compound">ImageView</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/M502228/Downloads/nvblox-public/nvblox-public/nvblox/include/nvblox/sensors/image.h" line="196" column="13"/>
      </memberdef>
      <memberdef kind="function" id="classnvblox_1_1ImageView_1accbeba85ddb77c269c0010af515306b4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>nvblox::ImageView&lt; _ElementType &gt;::ImageView</definition>
        <argsstring>(ImageView &amp;&amp;other)</argsstring>
        <name>ImageView</name>
        <qualifiedname>nvblox::ImageView::ImageView</qualifiedname>
        <param>
          <type><ref refid="classnvblox_1_1ImageView" kindref="compound">ImageView</ref> &amp;&amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
<para>Move (<ref refid="classnvblox_1_1ImageView" kindref="compound">ImageView</ref> is a shallow copy so a move-construction is the same as copy-construction) </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/M502228/Downloads/nvblox-public/nvblox-public/nvblox/include/nvblox/sensors/image.h" line="200" column="3"/>
      </memberdef>
      <memberdef kind="function" id="classnvblox_1_1ImageView_1ad540648a3e57631385be00ee0ca6e049" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classnvblox_1_1ImageView" kindref="compound">ImageView</ref> &amp;</type>
        <definition>ImageView &amp; nvblox::ImageView&lt; _ElementType &gt;::operator=</definition>
        <argsstring>(ImageView &amp;&amp;other)</argsstring>
        <name>operator=</name>
        <qualifiedname>nvblox::ImageView::operator=</qualifiedname>
        <param>
          <type><ref refid="classnvblox_1_1ImageView" kindref="compound">ImageView</ref> &amp;&amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/M502228/Downloads/nvblox-public/nvblox-public/nvblox/include/nvblox/sensors/image.h" line="201" column="13"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="2">
        <label>nvblox::ImageBase&lt; _ElementType &gt;</label>
        <link refid="classnvblox_1_1ImageBase"/>
      </node>
      <node id="1">
        <label>nvblox::ImageView&lt; _ElementType &gt;</label>
        <link refid="classnvblox_1_1ImageView"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="2">
        <label>nvblox::ImageBase&lt; _ElementType &gt;</label>
        <link refid="classnvblox_1_1ImageBase"/>
      </node>
      <node id="1">
        <label>nvblox::ImageView&lt; _ElementType &gt;</label>
        <link refid="classnvblox_1_1ImageView"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="C:/Users/M502228/Downloads/nvblox-public/nvblox-public/nvblox/include/nvblox/sensors/image.h" line="170" column="1" bodyfile="C:/Users/M502228/Downloads/nvblox-public/nvblox-public/nvblox/include/nvblox/sensors/image.h" bodystart="170" bodyend="202"/>
    <listofallmembers>
      <member refid="classnvblox_1_1ImageBase_1ac98eaa783ee38e39574bd75942ca80ed" prot="public" virt="non-virtual"><scope>nvblox::ImageView</scope><name>cols</name></member>
      <member refid="classnvblox_1_1ImageBase_1ad7b25a9aae122bcfb76b10ffa6673701" prot="protected" virt="non-virtual"><scope>nvblox::ImageView</scope><name>cols_</name></member>
      <member refid="classnvblox_1_1ImageBase_1a8ac01f53420e26a45a24e01d5c9f67c4" prot="protected" virt="non-virtual"><scope>nvblox::ImageView</scope><name>data_</name></member>
      <member refid="classnvblox_1_1ImageBase_1a535d9177d9a0eeb3df283676206f011c" prot="public" virt="non-virtual"><scope>nvblox::ImageView</scope><name>dataConstPtr</name></member>
      <member refid="classnvblox_1_1ImageBase_1af18aec811c976ef51a3d91e791cf3a5e" prot="public" virt="non-virtual"><scope>nvblox::ImageView</scope><name>dataPtr</name></member>
      <member refid="classnvblox_1_1ImageView_1ab9eb34a9a1ab3cc70bf5414df4616fae" prot="public" virt="non-virtual"><scope>nvblox::ImageView</scope><name>ElementType</name></member>
      <member refid="classnvblox_1_1ImageView_1a9121c4ef2b888cf3b81b3fa79309268b" prot="public" virt="non-virtual"><scope>nvblox::ImageView</scope><name>ElementType_nonconst</name></member>
      <member refid="classnvblox_1_1ImageBase_1a63357bf56903529282f781514bc162fc" prot="public" virt="non-virtual"><scope>nvblox::ImageView</scope><name>height</name></member>
      <member refid="classnvblox_1_1ImageBase_1a52fd3795cb941f3de812f10c7eaadb7b" prot="protected" virt="non-virtual"><scope>nvblox::ImageView</scope><name>ImageBase</name></member>
      <member refid="classnvblox_1_1ImageBase_1a63c5eb5434b0de06b4b6e7688e74f680" prot="protected" virt="non-virtual"><scope>nvblox::ImageView</scope><name>ImageBase</name></member>
      <member refid="classnvblox_1_1ImageBase_1aea81e82f1984f34eed7314805823e031" prot="protected" virt="non-virtual"><scope>nvblox::ImageView</scope><name>ImageBase</name></member>
      <member refid="classnvblox_1_1ImageBase_1a870f61cfb8a3a845a6d590d33a7c57b3" prot="protected" virt="non-virtual"><scope>nvblox::ImageView</scope><name>ImageBase</name></member>
      <member refid="classnvblox_1_1ImageView_1af01528f0241757eb0ab10c29a5255c5c" prot="public" virt="non-virtual"><scope>nvblox::ImageView</scope><name>ImageView</name></member>
      <member refid="classnvblox_1_1ImageView_1adb3b40c8f8215dd78d176e2e2aac7128" prot="public" virt="non-virtual"><scope>nvblox::ImageView</scope><name>ImageView</name></member>
      <member refid="classnvblox_1_1ImageView_1a4f6b8451c8d4ff9bf8a59a51384f1c7f" prot="public" virt="non-virtual"><scope>nvblox::ImageView</scope><name>ImageView</name></member>
      <member refid="classnvblox_1_1ImageView_1a75465ebcae2a12da93940a1eee1dd3be" prot="public" virt="non-virtual"><scope>nvblox::ImageView</scope><name>ImageView</name></member>
      <member refid="classnvblox_1_1ImageView_1accbeba85ddb77c269c0010af515306b4" prot="public" virt="non-virtual"><scope>nvblox::ImageView</scope><name>ImageView</name></member>
      <member refid="classnvblox_1_1ImageBase_1ad854bf8480a21045488e98e85e5ed28d" prot="public" virt="non-virtual"><scope>nvblox::ImageView</scope><name>numel</name></member>
      <member refid="classnvblox_1_1ImageBase_1aab8397c3df9d5735d5975a9ac9fb5804" prot="public" virt="non-virtual"><scope>nvblox::ImageView</scope><name>operator()</name></member>
      <member refid="classnvblox_1_1ImageBase_1ad9dbdb0ea96b7105632ee6c526aa7440" prot="public" virt="non-virtual"><scope>nvblox::ImageView</scope><name>operator()</name></member>
      <member refid="classnvblox_1_1ImageBase_1a36da952d6f8858e22bc9bcbcaf75aeb1" prot="public" virt="non-virtual"><scope>nvblox::ImageView</scope><name>operator()</name></member>
      <member refid="classnvblox_1_1ImageBase_1ad4d1c7922f30076be956d53d3ca425cd" prot="public" virt="non-virtual"><scope>nvblox::ImageView</scope><name>operator()</name></member>
      <member refid="classnvblox_1_1ImageView_1a5b57fdf573157dde0dcb5db40796310d" prot="public" virt="non-virtual"><scope>nvblox::ImageView</scope><name>operator=</name></member>
      <member refid="classnvblox_1_1ImageView_1ad540648a3e57631385be00ee0ca6e049" prot="public" virt="non-virtual"><scope>nvblox::ImageView</scope><name>operator=</name></member>
      <member refid="classnvblox_1_1ImageBase_1a99b33111882c220c7f336e0e28c45679" prot="protected" virt="non-virtual" ambiguityscope="nvblox::ImageBase::"><scope>nvblox::ImageView</scope><name>operator=</name></member>
      <member refid="classnvblox_1_1ImageBase_1a75a04dd2f4c68ca26dd301dc1ed23b2f" prot="protected" virt="non-virtual" ambiguityscope="nvblox::ImageBase::"><scope>nvblox::ImageView</scope><name>operator=</name></member>
      <member refid="classnvblox_1_1ImageBase_1a9d087c511c65b0ed94bc43306b7574ba" prot="public" virt="non-virtual"><scope>nvblox::ImageView</scope><name>rows</name></member>
      <member refid="classnvblox_1_1ImageBase_1a79bb05e8dbcd406f25b4572a493a7cf7" prot="protected" virt="non-virtual"><scope>nvblox::ImageView</scope><name>rows_</name></member>
      <member refid="classnvblox_1_1ImageBase_1a11906bfe86bb4c4956ab93f501c7c73b" prot="public" virt="non-virtual"><scope>nvblox::ImageView</scope><name>width</name></member>
      <member refid="classnvblox_1_1ImageBase_1a9394ed699e8b48977dbf425f8a94bb0b" prot="public" virt="virtual"><scope>nvblox::ImageView</scope><name>~ImageBase</name></member>
      <member refid="classnvblox_1_1ImageView_1aaa967b7ae68f8c59af61f0b3e78f860e" prot="public" virt="virtual"><scope>nvblox::ImageView</scope><name>~ImageView</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
