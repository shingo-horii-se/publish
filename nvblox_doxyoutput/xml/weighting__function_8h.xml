<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.6" xml:lang="en-US">
  <compounddef id="weighting__function_8h" kind="file" language="C++">
    <compoundname>weighting_function.h</compoundname>
    <includes local="no">cuda_runtime.h</includes>
    <includes refid="types_8h" local="yes">nvblox/core/types.h</includes>
    <includes refid="unified__ptr_8h" local="yes">nvblox/core/unified_ptr.h</includes>
    <includes refid="voxels_8h" local="yes">nvblox/map/voxels.h</includes>
    <includes local="yes">nvblox/integrators/internal/impl/weighting_function_impl.h</includes>
    <includedby refid="nvblox_8h" local="yes">nvblox.h</includedby>
    <includedby refid="projective__color__integrator_8h" local="yes">projective_color_integrator.h</includedby>
    <includedby refid="projective__tsdf__integrator_8h" local="yes">projective_tsdf_integrator.h</includedby>
    <incdepgraph>
      <node id="15">
        <label>nvblox/core/color.h</label>
        <link refid="color_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>nvblox/core/types.h</label>
        <link refid="types_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="8">
        <label>nvblox/core/unified_ptr.h</label>
        <link refid="unified__ptr_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>weighting_function.h</label>
        <link refid="weighting__function_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
      </node>
      <node id="14">
        <label>nvblox/map/voxels.h</label>
        <link refid="voxels_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
      </node>
      <node id="11">
        <label>nvblox/utils/logging.h</label>
        <link refid="logging_8h"/>
        <childnode refid="12" relation="include">
        </childnode>
      </node>
      <node id="5">
        <label>Eigen/Core</label>
      </node>
      <node id="6">
        <label>Eigen/Geometry</label>
      </node>
      <node id="9">
        <label>atomic</label>
      </node>
      <node id="17">
        <label>cmath</label>
      </node>
      <node id="2">
        <label>cuda_runtime.h</label>
      </node>
      <node id="12">
        <label>glog/logging.h</label>
      </node>
      <node id="4">
        <label>iostream</label>
      </node>
      <node id="13">
        <label>nvblox/core/internal/impl/unified_ptr_impl.h</label>
      </node>
      <node id="18">
        <label>nvblox/integrators/internal/impl/weighting_function_impl.h</label>
      </node>
      <node id="16">
        <label>stdint.h</label>
      </node>
      <node id="10">
        <label>type_traits</label>
      </node>
      <node id="7">
        <label>vector</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="3">
        <label>projective_color_integrator.h</label>
        <link refid="projective__color__integrator_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="6">
        <label>projective_tsdf_integrator.h</label>
        <link refid="projective__tsdf__integrator_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>weighting_function.h</label>
        <link refid="weighting__function_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>mapper.h</label>
        <link refid="mapper_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="5">
        <label>multi_mapper.h</label>
        <link refid="multi__mapper_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>nvblox.h</label>
        <link refid="nvblox_8h"/>
      </node>
    </invincdepgraph>
    <innerclass refid="classnvblox_1_1WeightingFunction" prot="public">nvblox::WeightingFunction</innerclass>
    <innernamespace refid="namespacenvblox">nvblox</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#pragma<sp/>once</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;cuda_runtime.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="types_8h" kindref="compound">nvblox/core/types.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="unified__ptr_8h" kindref="compound">nvblox/core/unified_ptr.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="voxels_8h" kindref="compound">nvblox/map/voxels.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespacenvblox" kindref="compound">nvblox</ref><sp/>{</highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight></codeline>
<codeline lineno="11" refid="namespacenvblox_1ae76b8cc1c9b44b61cf58f4662f97bbc5" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">enum<sp/>class</highlight><highlight class="normal"><sp/><ref refid="namespacenvblox_1ae76b8cc1c9b44b61cf58f4662f97bbc5" kindref="member">WeightingFunctionType</ref><sp/>{</highlight></codeline>
<codeline lineno="12"><highlight class="normal"><sp/><sp/><ref refid="namespacenvblox_1ae76b8cc1c9b44b61cf58f4662f97bbc5af7d5bee02c257960661c1f7530bb46bc" kindref="member">kConstantWeight</ref>,</highlight></codeline>
<codeline lineno="13"><highlight class="normal"><sp/><sp/><ref refid="namespacenvblox_1ae76b8cc1c9b44b61cf58f4662f97bbc5aed584a8afea436ac3925c2f336f97207" kindref="member">kConstantDropoffWeight</ref>,</highlight></codeline>
<codeline lineno="14"><highlight class="normal"><sp/><sp/><ref refid="namespacenvblox_1ae76b8cc1c9b44b61cf58f4662f97bbc5ac8b55513c819c16a81464269132564c8" kindref="member">kInverseSquareWeight</ref>,</highlight></codeline>
<codeline lineno="15"><highlight class="normal"><sp/><sp/><ref refid="namespacenvblox_1ae76b8cc1c9b44b61cf58f4662f97bbc5a8ea123f70b9ed91f4c5ef97fa2cd4b64" kindref="member">kInverseSquareDropoffWeight</ref></highlight></codeline>
<codeline lineno="16"><highlight class="normal">};</highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight></codeline>
<codeline lineno="18" refid="namespacenvblox_1a1134fae2a499abdb031e39a5b534643a" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>std::ostream&amp;<sp/><ref refid="namespacenvblox_1a1134fae2a499abdb031e39a5b534643a" kindref="member">operator&lt;&lt;</ref>(</highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/><sp/><sp/>std::ostream&amp;<sp/>os,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="namespacenvblox_1ae76b8cc1c9b44b61cf58f4662f97bbc5" kindref="member">WeightingFunctionType</ref>&amp;<sp/>weighting_function_type);</highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight></codeline>
<codeline lineno="21" refid="namespacenvblox_1aca11bf4da09302e5daa400017eb6092b" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/><ref refid="namespacenvblox_1ae76b8cc1c9b44b61cf58f4662f97bbc5" kindref="member">WeightingFunctionType</ref><sp/><ref refid="namespacenvblox_1aca11bf4da09302e5daa400017eb6092b" kindref="member">kDefaultWeightingFunctionType</ref><sp/>=</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacenvblox_1ae76b8cc1c9b44b61cf58f4662f97bbc5ac8b55513c819c16a81464269132564c8" kindref="member">WeightingFunctionType::kInverseSquareWeight</ref>;</highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight></codeline>
<codeline lineno="27" refid="classnvblox_1_1WeightingFunction" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classnvblox_1_1WeightingFunction" kindref="compound">WeightingFunction</ref><sp/>{</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="29" refid="classnvblox_1_1WeightingFunction_1a38d63d9aaea1cff2b8947ac1348e1028" refkind="member"><highlight class="normal"><sp/><sp/>__host__<sp/>__device__<sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="classnvblox_1_1WeightingFunction_1a38d63d9aaea1cff2b8947ac1348e1028" kindref="member">WeightingFunction</ref>(</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacenvblox_1ae76b8cc1c9b44b61cf58f4662f97bbc5" kindref="member">WeightingFunctionType</ref><sp/><ref refid="classnvblox_1_1WeightingFunction_1a9bc3d94153459d69211102c31902da3a" kindref="member">type</ref><sp/>=<sp/><ref refid="namespacenvblox_1aca11bf4da09302e5daa400017eb6092b" kindref="member">kDefaultWeightingFunctionType</ref>);</highlight></codeline>
<codeline lineno="31" refid="classnvblox_1_1WeightingFunction_1a0eb63627496104dc1e1b68fa071314bf" refkind="member"><highlight class="normal"><sp/><sp/>__host__<sp/>__device__<sp/><ref refid="classnvblox_1_1WeightingFunction_1a0eb63627496104dc1e1b68fa071314bf" kindref="member">~WeightingFunction</ref>()<sp/>=<sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight></codeline>
<codeline lineno="34"></codeline>
<codeline lineno="41" refid="classnvblox_1_1WeightingFunction_1a96ed266048fba8f6e7108fc82b2797f8" refkind="member"><highlight class="normal"><sp/><sp/>__host__<sp/>__device__<sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="classnvblox_1_1WeightingFunction_1a96ed266048fba8f6e7108fc82b2797f8" kindref="member">operator()</ref>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>measured_depth,</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>voxel_depth,</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>truncation_distance)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight></codeline>
<codeline lineno="48" refid="classnvblox_1_1WeightingFunction_1a9bc3d94153459d69211102c31902da3a" refkind="member"><highlight class="normal"><sp/><sp/>__host__<sp/>__device__<sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="namespacenvblox_1ae76b8cc1c9b44b61cf58f4662f97bbc5" kindref="member">WeightingFunctionType</ref>&amp;<sp/><ref refid="classnvblox_1_1WeightingFunction_1a9bc3d94153459d69211102c31902da3a" kindref="member">type</ref>()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight></codeline>
<codeline lineno="53" refid="classnvblox_1_1WeightingFunction_1ab60b2de2c4a58d21a0806486dc05eaaf" refkind="member"><highlight class="normal"><sp/><sp/>__host__<sp/>__device__<sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classnvblox_1_1WeightingFunction_1ab60b2de2c4a58d21a0806486dc05eaaf" kindref="member">type</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="namespacenvblox_1ae76b8cc1c9b44b61cf58f4662f97bbc5" kindref="member">WeightingFunctionType</ref><sp/><ref refid="classnvblox_1_1WeightingFunction_1a9bc3d94153459d69211102c31902da3a" kindref="member">type</ref>);</highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/>__host__<sp/>__device__<sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>computeDropoff(</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>measured_depth,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>voxel_depth,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>truncation_distance)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/>__host__<sp/>__device__<sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>computeInverseSquare(</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>measured_depth,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>voxel_depth,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>truncation_distance)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><ref refid="namespacenvblox_1ae76b8cc1c9b44b61cf58f4662f97bbc5" kindref="member">WeightingFunctionType</ref><sp/>type_;</highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>constant_weight<sp/>=<sp/>1.0f;</highlight></codeline>
<codeline lineno="65"><highlight class="normal">};</highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal">}<sp/><sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>nvblox</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;nvblox/integrators/internal/impl/weighting_function_impl.h&quot;</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="C:/Users/M502228/Downloads/nvblox-public/nvblox-public/nvblox/include/nvblox/integrators/weighting_function.h"/>
  </compounddef>
</doxygen>
